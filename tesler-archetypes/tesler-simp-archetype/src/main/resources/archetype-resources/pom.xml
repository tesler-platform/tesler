<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <packaging>jar</packaging>
  <version>${version}</version>
  <name>APPNAME5 - APP</name>

  <properties>

    <checktyle.config>src/main/resources/checkstyle-checker.xml</checktyle.config>
    <dollar.sign>$</dollar.sign>

    <!-- compiler settings -->

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- dependencies versions -->

    <spring.version>5.1.9.RELEASE</spring.version>
    <spring-boot.version>2.1.7.RELEASE</spring-boot.version>
    <liquibase.version>3.6.3</liquibase.version>
    <slf4j.version>1.7.25</slf4j.version>
    <tesler.version>3.0.0.M9.1-SNAPSHOT</tesler.version>

    <junit.jupiter.version>5.7.1</junit.jupiter.version>
    <junit.platform.version>1.7.0</junit.platform.version>
    <surefire.version>2.22.2</surefire.version>
    <mockito.version>2.23.4</mockito.version>
    <!--    todo rollback-->
    <!--    <spring.version>5.1.9.RELEASE</spring.version>-->
    <!--    <spring-boot.version>2.1.7.RELEASE</spring-boot.version>-->
    <!--    <liquibase.version>${liquibase.version}</liquibase.version>-->
    <!--    <slf4j.version>1.7.25</slf4j.version>-->
    <!--    <tesler.version>2.3.0-SNAPSHOT2</tesler.version>-->

    <!--    <junit.jupiter.version>${junit.jupiter.version}</junit.jupiter.version>-->
    <!--    <junit.platform.version>${junit.platform.version}</junit.platform.version>-->
    <!--    <surefire.version>2.22.2</surefire.version>-->
    <!--    <mockito.version>2.23.4</mockito.version>-->

    <!-- build settings -->
    <resource.filtering>false</resource.filtering>
    <perform.build.only>true</perform.build.only>
    <liquibase.dropfirst>false</liquibase.dropfirst>

    <liquibase.changelog>db/migration/liquibase/master.xml</liquibase.changelog>

  </properties>

  <profiles>
    <profile>
      <id>UI</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
              <filesets>
                <fileset>
                  <directory>node_modules</directory>
                </fileset>
                <fileset>
                  <directory>build</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>exec-npm-install</id>
                <phase>generate-sources</phase>
                <configuration>
                  <workingDirectory>${dollar.sign}{project.basedir}/ui</workingDirectory>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
              <execution>
                <id>exec-npm-run-build</id>
                <phase>generate-sources</phase>
                <configuration>
                  <workingDirectory>${dollar.sign}{project.basedir}/ui</workingDirectory>
                  <executable>npm</executable>
                  <arguments>
                    <argument>run</argument>
                    <argument>build</argument>
                  </arguments>
                </configuration>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>ui-resources</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${dollar.sign}{project.build.outputDirectory}/ui</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${dollar.sign}{project.basedir}/ui/build</directory>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>Dev</id>
      <properties>
        <spring.active.profiles>dev</spring.active.profiles>
        <resource.filtering>true</resource.filtering>
      </properties>
    </profile>

    <!-- возможность запускать тесты без деплоя -->

    <profile>
      <id>Tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-agent</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.springframework</groupId>
                      <artifactId>spring-instrument</artifactId>
                      <version>${spring.version}</version>
                      <outputDirectory>${project.build.directory}/agents</outputDirectory>
                      <destFileName>spring-instrument-${spring.version}.jar</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <phase>test</phase>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <forkCount>1</forkCount>
              <reuseForks>true</reuseForks>
              <trimStackTrace>false</trimStackTrace>
              <argLine>-javaagent:${project.build.directory}/agents/spring-instrument-${spring.version}.jar</argLine>
              <systemPropertyVariables>
                <test.dbDriver>${jdbc.driver}</test.dbDriver>
                <test.dbUrl>${jdbc.url}</test.dbUrl>
                <test.dbUser>${jdbc.user}</test.dbUser>
                <test.dbPassword>${jdbc.password}</test.dbPassword>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <!--    todo remove-->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.18</version>
    </dependency>


    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>${liquibase.version}</version>
    </dependency>
    <dependency>
      <groupId>io.tesler</groupId>
      <artifactId>tesler-liquibase</artifactId>
      <version>${tesler.version}</version>
    </dependency>


    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pf4j</groupId>
      <artifactId>pf4j</artifactId>
      <version>2.6.0</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.10</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.0</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>2.3.0</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <version>2.3.0</version>
    </dependency>

    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>


    <!-- Test -->

    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit.platform.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <version>${spring-boot.version}</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.tesler</groupId>
      <artifactId>tesler-model-core</artifactId>
      <version>${tesler.version}</version>
    </dependency>
    <dependency>
      <groupId>io.tesler</groupId>
      <artifactId>tesler-crudma</artifactId>
      <version>${tesler.version}</version>
    </dependency>
    <dependency>
      <groupId>io.tesler</groupId>
      <artifactId>tesler-testing</artifactId>
      <classifier>tests</classifier>
      <version>${tesler.version}</version>
    </dependency>

  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.tesler</groupId>
        <artifactId>tesler-bom</artifactId>
        <version>${tesler.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <resources>
            <resource>
              <directory>src/main/resources</directory>
              <filtering>${resource.filtering}</filtering>
              <includes>
                <include>application-dev.properties</include>
              </includes>
            </resource>
            <resource>
              <directory>src/main/resources</directory>
              <filtering>false</filtering>
              <excludes>
                <exclude>application-dev.properties</exclude>
              </excludes>
            </resource>
          </resources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>groupid5.app.APPNAME5Application</mainClass>
          <profiles>${spring.active.profiles}</profiles>
          <classifier>exec</classifier>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${liquibase.version}</version>
        <configuration>
          <skip>false</skip>
          <driver>${jdbc.driver}</driver>
          <url>${jdbc.url}</url>
          <username>${jdbc.user}</username>
          <password>${jdbc.password}</password>
          <changeLogFile>${liquibase.changelog}</changeLogFile>
          <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
          <logging>WARNING</logging>
          <systemProperties>
            <org.slf4j.simpleLogger.log.liquibase.executor.jvm.JdbcExecutor>warn
            </org.slf4j.simpleLogger.log.liquibase.executor.jvm.JdbcExecutor>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit-platform</artifactId>
            <version>${surefire.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <configLocation>${checktyle.config}</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
          <sourceDirectories>
            <directory>${project.build.sourceDirectory}</directory>
            <directory>${project.build.testSourceDirectory}</directory>
          </sourceDirectories>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>process-sources</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.8</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

</project>
